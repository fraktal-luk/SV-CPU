$start
	add_i 	r1, r0, 17
	div_u   r5, r0, r0
	div_u   r6, r1, r0
	div_u   r7, r0, r1

	add_i	r1, r0, 64
	add_i	r2, r0, 16
	add_i	r3, r0, 4
	add_i	r4, r0, 0
	jl		r31, $check_div_u

	add_i	r1, r0, 17
	add_i	r2, r0, 16
	add_i	r3, r0, 1
	add_i	r4, r0, 1
	jl		r31, $check_div_u

	add_i	r1, r0, 1
	add_i	r2, r0, -1
	add_i	r3, r0, 0
	add_i	r4, r0, 1
	jl		r31, $check_div_u

	add_i	r1, r0, -1
	add_i	r2, r0, 2
	shl_i	r3, r1, -1   ; shift right to get floor(x/2)
	add_i	r4, r0, 1
	jl		r31, $check_div_u

	add_i	r1, r0, 0
	add_i	r2, r0, -1
	shl_i	r3, r1, 0
	add_i	r4, r0, 0
	jl		r31, $check_div_u

	add_i	r1, r0, 1
	shl_i   r1, r1, 31
	add_i	r2, r0, 1
	add_r	r3, r0, r1
	add_i	r4, r0, 0
	jl		r31, $check_div_u

	sys call
$error
    sys error


$check_div_u
	; r1 / r2 == r3
	; r1 % r2 == r4
	div_u r10, r1, r2
	rem_u r11, r1, r2
	sub_r r12, r10, r3
	sub_r r13, r11, r4

	jnz_i  r12, $error
	jnz_i  r13, $error
	jz_r   r0, r0, r31	; return
	add_r  r0, r0, r0   ; nop
